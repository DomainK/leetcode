class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row = matrix.size();
        int col = matrix[0].size();

        int i = 0;
        while(i < row && matrix[i][0] <= target)
            i++;
        
        if(i == 0)
            return binarySearch(matrix[i], target, 0, col - 1);
        
        return binarySearch(matrix[i - 1], target, 0, col - 1);
    }

    bool binarySearch(vector<int>& matrix, int target, int left, int right){
        int mid = left + (right - left) / 2;

        if(matrix[mid] == target)
            return true;

        if(left < right){
            if(matrix[mid] > target){
                return binarySearch(matrix, target, left, mid - 1);
            }
            else if(matrix[mid] < target)
                return binarySearch(matrix, target, mid + 1, right);
        }

        return false;
    }
};
