/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool btreeGameWinningMove(TreeNode* root, int n, int x) {
        TreeNode* cur = find(root, x);
        if(countNum(cur->left) >= (n + 1) / 2)
            return true;
        if(countNum(cur->right) >= (n + 1) / 2)
            return true;
        if(n - countNum(cur) >= (n + 1) / 2)
            return true;
        return false;
    }
    
    TreeNode* find(TreeNode* root, int x){
        if(root == nullptr)
            return nullptr;
        if(root->val == x)
            return root;
        
        TreeNode* res = find(root->left, x);

        if(res != nullptr)
            return res;
        res = find(root->right, x);
        
        return res;
    }

    int countNum(TreeNode* root){
        if(root == nullptr)
            return 0;
        
        return 1 + countNum(root->left) + countNum(root->right);
    }
};
