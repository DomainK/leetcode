class Solution {
public:
    bool splitArraySameAverage(vector<int>& nums) {
        int n = nums.size();
        int m = n / 2;
        if(n == 1)
            return false;

        int total = accumulate(nums.begin(), nums.end(), 0);
        for(int& num : nums){
            num = num * n - total;
        }

        unordered_set<int> left;
        for(int i = 1; i < (1 << m); i++){
            int leftSum = 0;
            for(int j = 0; j < m; j++){
                if(i & (1 << j))
                    leftSum += nums[j];
            }
            if(leftSum == 0)
                return true;
            left.emplace(leftSum);
        }

        int rightTotal = accumulate(nums.begin() + m, nums.end(), 0);
        for(int i = 1; i < (1 << n - m); i++){
            int rightSum = 0;
            for(int j = m; j < n; j++){
                if(i & (1 << j - m))
                    rightSum += nums[j];
            }
            if(rightSum == 0 || (rightSum != rightTotal && left.count(-rightSum)))
                return true;
        }

        return false;
    }
};
