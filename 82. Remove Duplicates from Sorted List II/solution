/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* slow = new ListNode(-1, head);
        ListNode* tmp = slow;
        ListNode* fast = head;

        while(fast != nullptr){
            bool dup = false;
            while(fast->next != nullptr && fast->next->val == fast->val){
                fast = fast->next;
                dup = true;
            }
            if(!dup){
                slow = slow->next;
            }
            fast = fast->next;
            slow->next = fast;
        }
        ListNode* result = tmp->next;
        delete tmp;

        return result;
    }
};
