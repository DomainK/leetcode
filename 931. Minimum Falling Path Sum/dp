class Solution {
public:
    vector<int> dirs{-1, 0, 1};

    int minFallingPathSum(vector<vector<int>>& matrix) {
        int n = matrix.size();
        vector<int> dp(n);
        for(int i = 0; i < n; i++){
            dp[i] = matrix[n - 1][i];
        }
        for(int j = n - 2; j >= 0; j--){
            vector<int> cur(n, INT_MAX);
            for(int i = 0; i < n; i++){
                for(int dir : dirs){
                    int prev = i + dir;
                    if(prev < 0 || prev >= n)
                        continue;
                    cur[i] = min(cur[i], matrix[j][i] + dp[prev]);
                }
            }
            dp = cur;
        }

        return *min_element(dp.begin(), dp.end());
    }
};
