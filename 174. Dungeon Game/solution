class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        int m = dungeon.size();
        int n = dungeon[0].size();
        vector<vector<int>> memo(m, vector<int>(n, -1));
        
        return dp(dungeon, memo, 0, 0);
    }

    int dp(vector<vector<int>>& dungeon, vector<vector<int>>& memo, int i, int j){
        int m = dungeon.size();
        int n = dungeon[0].size();

        if(i == m - 1 && j == n - 1){
            return dungeon[i][j] >= 0? 1 : 1 - dungeon[i][j];
        }

        if(i == m || j == n)
            return INT_MAX;
        
        if(memo[i][j] != -1)
            return memo[i][j];

        memo[i][j] = - dungeon[i][j] + min(dp(dungeon, memo, i + 1, j), dp(dungeon, memo, i, j + 1));
        if(memo[i][j] <= 0)
            memo[i][j] = 1;

        return memo[i][j];
    }
};
