class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> result;
        int length = nums.size();
        sort(nums.begin(), nums.end());
        if(nums.size() < 4)
            return result;

        for(int ptr1 = 0; ptr1 != length - 3; ++ptr1){
            if(ptr1 > 0 && nums[ptr1] == nums[ptr1 - 1])
                continue;
            for(int ptr2 = ptr1 + 1; ptr2 != length - 2; ++ptr2){
                if(ptr2 > ptr1 + 1 && nums[ptr2] == nums[ptr2 - 1])
                    continue;
                int targetTwo = target - nums[ptr1] - nums[ptr2];
                for(int left = ptr2 + 1; left < length - 1; ++left){
                    if(left > ptr2 + 1 && nums[left] == nums[left - 1])
                        continue;
                    int right = length - 1;
                    while(left < right && nums[left] + nums[right] > targetTwo)
                        right--;

                    if(left == right)
                        break;
                    if(nums[left] + nums[right] == targetTwo){
                        result.push_back({nums[ptr1], nums[ptr2], nums[left], nums[right]});
                        continue;
                    }
                }
            }
        }

        return result;
    }
};
