class Solution {
public:
    unordered_map<int, int> valToIdx;

    TreeNode* constructFromPrePost(vector<int>& preOrder, vector<int>& postOrder) {
        for (int i = 0; i < postOrder.size(); i++) {
            valToIdx[postOrder[i]] = i;
        }

        return build(preOrder, 0, preOrder.size() - 1, 
            postOrder, 0, postOrder.size() - 1);
    }
    TreeNode* build(vector<int>& preOrder, int preLeft, int preRight,
        vector<int>& postOrder, int postLeft, int postRight) {
        if (preLeft > preRight)
            return nullptr;
        if (preLeft == preRight)
            return new TreeNode(preOrder[preLeft]);

        int rootVal = preOrder[preLeft];
        int idx = valToIdx[preOrder[preLeft + 1]];
        int leftsize = idx - postLeft + 1;
        TreeNode* root = new TreeNode(rootVal);
        root->left = build(preOrder, preLeft + 1, preLeft + leftsize,
            postOrder, postLeft, idx);
        root->right = build(preOrder, preLeft + leftsize + 1, preRight,
            postOrder, idx + 1, postRight - 1);

        return root;
    }
};
