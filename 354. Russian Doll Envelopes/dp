struct cmp{
    bool operator()(const vector<int>& a, const vector<int>& b){
        if(a[0] == b[0])
            return a[1] > b[1];
        return a[0] < b[0];
    }
};

class Solution {
public:
    int maxEnvelopes(vector<vector<int>>& envelopes) {
        int n = envelopes.size();
        vector<int> top(n);
        int topNums = 0;

        sort(envelopes.begin(), envelopes.end(), cmp());
        for(int i = 0; i < n; i++){
            int cur = envelopes[i][1];

            int left = 0; 
            int right = topNums;
            while(left < right){
                int mid = left + (right - left) / 2;
                if(top[mid] > cur)
                    right = mid;
                else if(top[mid] < cur)
                    left = mid + 1;
                else
                    right = mid;
            }

            if(left == topNums)
                topNums++;
            top[left] = cur;
        }

        return topNums;
    }
};
