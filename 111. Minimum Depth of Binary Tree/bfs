/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if (root == nullptr)
            return 0;

        return bfs(root);
    }

    int bfs(TreeNode* root) {
        queue<TreeNode*> que;
        
        que.push(root);
        int result = 1;
        while (!que.empty()) {
            int sz = que.size();
            for (int i = 0; i < sz; i++) {
                TreeNode* next = que.front();
                que.pop();
                if (next->left == nullptr && next->right == nullptr) {
                    return result;
                }
                if (next->left != nullptr)
                    que.push(next->left);
                if (next->right != nullptr)
                    que.push(next->right);
            }
            result++;
        }
        return result;
    }
};
